<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assembly-CSharp</name>
    </assembly>
    <members>
        <member name="M:GUIControls.ResetCrafter">
            <summary>
            Exits Navigation mode and returns to Crafter to start position.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterNavigation.ShowNavPointer">
            <summary>
            Shows the NavPointer object meshes.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterNavigation.HideNavPointer">
            <summary>
            Hides the NavPointer object meshes.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterNavigation.Navigating">
            <summary>
            Navigate towards the destiniation using NavMeshAgent.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterNavigation.MeshNavToPoint(UnityEngine.Vector3)">
            <summary>
            Navigate to the destination using Unity's NavMeshAgent.
            </summary>
            <param name="destination">Point in world space to navigate to.</param>
        </member>
        <member name="M:CraftingAnims.CrafterNavigation.StopNavigating">
            <summary>
            Stop navigating to the current destination.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterNavigation.RotateTowardsMovementDir">
            <summary>
            Face the character towards the movement direction.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterIKHands.OnAnimatorIK(System.Int32)">
            <summary>
            If there is movement and/or rotation data in the animation for the Left Hand, use IK to
            set the position of the Left Hand of the character.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterIKHands.BlendIK(System.Boolean,System.Single,System.Single)">
            <summary>
            Smoothly blend IK on and off so there's no snapping into position.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterIKHands.SetIKPause(System.Single)">
            <summary>
            Pauses IK while character uses Left Hand during an animation.
            </summary>
        </member>
        <member name="T:CraftingAnims.CrafterAnimatorTriggers">
            <summary>
            Enum to use with the "Action" parameter of the animator. Convert to (int) to set.
            TriggerNumber is always -1 for future use with RPG Animation Pack.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.Inputs">
            <summary>
            Input abstraction for easier asset updates using outside control schemes.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.UpdateMovement">
            <summary>
            Moves the character.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.CheckForGrounded">
            <summary>
            Checks if character is within a certain distance from the ground, and markes it IsGrounded.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.CameraRelativeInput">
            <summary>
            All movement is based off camera facing.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.PushPull">
            <summary>
            Used when the Crafter is in Push/Pull mode.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.RotateTowardsMovementDir">
            <summary>
            Faces Crafter= along input direction.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.Facing">
            <summary>
            For facing the Crafter in a different direction than the Crafter.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.LockMovement(System.Single)">
            <summary>
            Prevents the Crafter from moving to apply Root Motion and let the animation drive the character position.
            </summary>
            <param name="locktime"></param>
        </member>
        <member name="M:CraftingAnims.CrafterController.ChangeCharacterState(System.Single,CraftingAnims.CrafterState)">
            <summary>
            Sets the CrafterState with a possible wait duration.
            </summary>
            <param name="waitTime"></param>
            <param name="state"></param>
        </member>
        <member name="M:CraftingAnims.CrafterController.TriggerAnimation(System.String)">
            <summary>
            Set Animator Trigger using legacy Animation Trigger names.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.RightHandBlend(System.Boolean)">
            <summary>
            Uses Avatar mask to Blend a Right Hand fist for holding items.
            </summary>
            <param name="use"></param>
        </member>
        <member name="M:CraftingAnims.CrafterController.RightArmBlend(System.Boolean)">
            <summary>
            Uses Avatar mask to Blend a Right arm for carrying items like a torch.
            </summary>
            <param name="use"></param>
        </member>
        <member name="M:CraftingAnims.CrafterController.CarryItem(System.Boolean)">
            <summary>
            Blend Right Arm Carry animation on/off.
            </summary>
            <param name="carry"></param>
        </member>
        <member name="M:CraftingAnims.CrafterController.BlendOff(System.Single)">
            <summary>
            Blends all Hand/Arm animations overrides off.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:CraftingAnims.CrafterController.IKBlendOn">
            <summary>
            Use CrafterIKHands.cs to blend in the use of IK to position the left hand.
            </summary>
        </member>
        <member name="M:CraftingAnims.CrafterController.IKBlendOff">
            <summary>
            Use CrafterIKHands.cs to blend out the use of IK to release the left hand.
            </summary>
        </member>
        <member name="T:EnemyController">
            Incharge of the character movement
        </member>
        <member name="F:BuildingMaterial.yieldObject">
            <summary>
            The Game Object that is spawned when this object is destroyed.
            </summary>
        </member>
        <member name="F:BuildingMaterial.yeildQuantity">
            <summary>
            How many of the yield objects are spawned.
            </summary>
        </member>
        <member name="M:BuildingMaterial.HealthCheck">
            <summary>
            Checks the health of the material and destroys the object is health is less than 0
            </summary>
        </member>
        <member name="M:BuildingMaterial.Kill">
            <summary>
            Destroys objects and spawns yield objects
            </summary>
        </member>
        <member name="T:SourceObject">
            <summary>
            This script controls the source objects from which players will gather resources from.
            </summary>
        </member>
        <member name="T:ActorInteraction">
            <summary>
            This class handels an actors interactions with the base and Items
            </summary>
        </member>
        <member name="T:FreeCam">
            <summary>
            A simple free camera to be added to a Unity game object.
            
            Keys:
            wasd / arrows	- movement
            q/e 			- up/down (local space)
            r/f 			- up/down (world space)
            pageup/pagedown	- up/down (world space)
            hold shift		- enable fast movement mode
            right mouse  	- enable free look
            mouse			- free look / rotation
                
            </summary>
        </member>
        <member name="F:FreeCam.movementSpeed">
            <summary>
            Normal speed of camera movement.
            </summary>
        </member>
        <member name="F:FreeCam.fastMovementSpeed">
            <summary>
            Speed of camera movement when shift is held down,
            </summary>
        </member>
        <member name="F:FreeCam.freeLookSensitivity">
            <summary>
            Sensitivity for free look.
            </summary>
        </member>
        <member name="F:FreeCam.zoomSensitivity">
            <summary>
            Amount to zoom the camera when using the mouse wheel.
            </summary>
        </member>
        <member name="F:FreeCam.fastZoomSensitivity">
            <summary>
            Amount to zoom the camera when using the mouse wheel (fast mode).
            </summary>
        </member>
        <member name="F:FreeCam.looking">
            <summary>
            Set to true when free looking (on right mouse button).
            </summary>
        </member>
        <member name="M:FreeCam.StartLooking">
            <summary>
            Enable free looking.
            </summary>
        </member>
        <member name="M:FreeCam.StopLooking">
            <summary>
            Disable free looking.
            </summary>
        </member>
        <member name="M:EnemyAI.EnemyStateMachine">
            <summary>
            Tracks enemy target state.
            </summary>
        </member>
        <member name="M:EnemyAI.GatherAllPlayers">
            <summary>
            Gathers all players in the scene into a list
            </summary>
        </member>
        <member name="M:EnemyAI.AdjustMasSightDistance(System.Single)">
            <summary>
            Sets the radious of the sphere collider. This determines sight distance.
            </summary>
            <param name="dist"></param>
        </member>
        <member name="M:EnemyAI.EnemyRotation">
            <summary>
            Rotates the object toward it's foward direction
            </summary>
        </member>
        <member name="M:EnemyAI.EnemyRotation(UnityEngine.Transform)">
            <summary>
            Rotates the object toward a spesific topic
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:EnemyAI.HandleRotation">
            <summary>
            Manages which rotation is used on this object based on weather there is a target or not
            </summary>
        </member>
        <member name="M:EnemyAI.MoveAgent">
            <summary>
            Moves the navemesh agent toward it's target
            </summary>
        </member>
        <member name="M:EnemyAI.SetTarget(UnityEngine.Transform)">
            <summary>
            Sets the target of the navmesh agent
            </summary>
            <param name="target"></param>
        </member>
        <member name="M:EnemyAI.LookForActor(UnityEngine.GameObject)">
            <summary>
            Checks line of sight to a target object or the "Player" based on a raycast to the target object. This raycast will not hit trigger colliders;
            </summary>
            <param name="actor"></param>
            <returns></returns>
        </member>
        <member name="M:LowPolyWater.LowPolyWater.CreateMeshLowPoly(UnityEngine.MeshFilter)">
            <summary>
            Rearranges the mesh vertices to create a 'low poly' effect
            </summary>
            <param name="mf">Mesh filter of gamobject</param>
            <returns></returns>
        </member>
        <member name="M:LowPolyWater.LowPolyWater.GenerateWaves">
            <summary>
            Based on the specified wave height and frequency, generate 
            wave motion originating from waveOriginPosition
            </summary>
        </member>
        <member name="F:Item.name">
            <summary>
            The name of the item. Needs to be obsolete. Use the GameObject name.
            </summary>
        </member>
        <member name="F:Item.itemOwner">
            <summary>
            What kind of Actor is holding this item
            </summary>
        </member>
        <member name="F:Item.m_OwnerObject">
            <summary>
            The Game Object of the actor that own's the item
            </summary>
        </member>
        <member name="F:Item.isEquipped">
            <summary>
            Is this item currently equipped by an actor?
            </summary>
        </member>
        <member name="F:Item.icon">
            <summary>
            The icon to show in the inventory.
            </summary>
        </member>
        <member name="F:Item.isEquipable">
            <summary>
            Can this item be held?
            </summary>
        </member>
        <member name="F:Item.fitsInBackpack">
            <summary>
            Can this item be stored in the backpack?
            </summary>
        </member>
        <member name="F:Item.itemAnimationState">
            <summary>
            This determines what set of animations to use with this item. 1 one 
            handed item, 2 is an item carried with two hands, 3 one handed weapon, 
            4 2handed weapon.
            </summary>
        </member>
        <member name="F:Item.inventoryIndex">
            <summary>
            The index of inventory slot this item is currently taking up, -1 not being
            in the inventory. 
            </summary>
        </member>
        <member name="F:Item.ignoredCollider">
            <summary>
            This stops the item from colliding with the actor that is holding it
            </summary>
        </member>
        <member name="M:Item.OutlineOnPlayerProximity">
            <summary>
            Checks for player distance and highlights the object if the player can 
            equipped the item. Note: Don't know if the player pickup distance is 
            matched here.
            </summary>
        </member>
    </members>
</doc>
